worker_processes auto;
rtmp_auto_push on;
events {}
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        # rtmp endpoint
        application live {
            live on;
            # video, audio combine, same rtmp packet
            interleave on;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 2s;
            dash on;
            dash_path /tmp/dash;
            dash_fragment 2s;
            record all;
            record_path /record;
            record_suffix _%d%m%Y_%H%M%S.flv;
            # 이미 다른곳에서 스트리밍 하고 있는 서버가 있다면
            # pull 을 통해 수용량을 높일 수 있음
            # pull rtmp://tv2.example.com:443/root/new name=tv2 static;
        }
    }
}


# http 설정
http {
    default_type application/octet-stream;
    # sendfile off;
    # aio on;
    # directio 512;

    server {
        client_max_body_size 0;
        listen 8080;
        # hls, dash 의 파일이 저장되어 있는 장소
        location / {
            root /tmp;
        }
        # mimetype 정의
        types {
            application/vnd.apple.mpegurl m3u8;
            application/dash+xml mpd;
            video/mp2t ts;
            text/html html;
        }

        # This URL provides RTMP statistics in XML
        # location /stat {
        #     rtmp_stat all;
        #     # Use this stylesheet to view XML as web page
        #     # in browser
        #     rtmp_stat_stylesheet stat.xsl;
        # }
        # location /stat.xsl {
        #     # XML stylesheet to view RTMP stats.
        #     # Copy stat.xsl wherever you want
        #     # and put the full directory path here
        #     root /path/to/stat.xsl/;
        # }
        # location /hls {
        #     # Serve HLS fragments
        #     types {
        #         application/vnd.apple.mpegurl m3u8;
        #         video/mp2t ts;
        #     }
        #     root /tmp;
        #     add_header Cache-Control no-cache;
        # }
        # location /dash {
        #     # Serve DASH fragments
        #     root /tmp;
        #     add_header Cache-Control no-cache;
        # }
    }
}